{{/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.manifests.job_run_task }}
{{- $envAll := . }}

{{- $serviceAccountName := "rally-run-task" }}
{{ tuple $envAll "run_task" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: rally-run-task
  annotations:
    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
{{- if .Values.helm3_hook }}
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "3"
{{- end }}
spec:
  schedule: {{ .Values.jobs.rally_task.cron | quote }}
  successfulJobsHistoryLimit: {{ .Values.jobs.rally_task.history.success }}
  failedJobsHistoryLimit: {{ .Values.jobs.rally_task.history.failed }}
  {{- if .Values.jobs.rally_task.starting_deadline }}
  startingDeadlineSeconds: {{ .Values.jobs.rally_task.starting_deadline }}
  {{- end }}
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
{{ tuple $envAll "rally" "rally_task" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 12 }}
    spec:
      template:
        metadata:
          labels:
{{ tuple $envAll "rally" "run-task" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 12 }}
        spec:
          serviceAccountName: {{ $serviceAccountName }}
          restartPolicy: {{ .Values.jobs.run_tasks.restartPolicy }}
          nodeSelector:
            {{ .Values.labels.job.node_selector_key }}: {{ .Values.labels.job.node_selector_value }}
          initContainers:
{{ tuple $envAll "run_task" list | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 12 }}
            - name: rally-run-task-init
{{ tuple $envAll "run_task" | include "helm-toolkit.snippets.image" | indent 14 }}
{{ tuple $envAll $envAll.Values.pod.resources.jobs.run_task | include "helm-toolkit.snippets.kubernetes_resources" | indent 14}}
              securityContext:
                runAsUser: 0
              command:
                - chown
                - -R
                - "rally:"
                - /var/lib/rally/data
              volumeMounts:
                - name: pod-tmp
                  mountPath: /tmp
                - name: rally-reports
                  mountPath: /var/lib/rally/data
          containers:
            - name: rally-run-task
{{ tuple $envAll "run_task" | include "helm-toolkit.snippets.image" | indent 14 }}
{{ tuple $envAll $envAll.Values.pod.resources.jobs.run_task | include "helm-toolkit.snippets.kubernetes_resources" | indent 14 }}
              command:
                - /tmp/run-task.sh
              env:
{{- with $env := dict "ksUserSecret" .Values.secrets.identity.admin }}
{{- include "helm-toolkit.snippets.keystone_openrc_env_vars" $env | indent 16 }}
{{- end }}
    
{{- if or .Values.manifests.certificates .Values.tls.identity }}
                - name: REQUESTS_CA_BUNDLE
                  value: "/etc/rally/certs/ca.crt"
{{- end }}
                - name: ENABLED_TESTS
                  value: {{ include "helm-toolkit.utils.joinListWithComma" .Values.enabled_tasks }}
              volumeMounts:
                - name: pod-tmp
                  mountPath: /tmp
                - name: rally-bin
                  mountPath: /tmp/run-task.sh
                  subPath: run-task.sh
                  readOnly: true
                - name: etcrally
                  mountPath: /etc/rally
                - name: rally-etc
                  mountPath: /etc/rally/rally.conf
                  subPath: rally.conf
                  readOnly: true
                - name: rally-tasks
                  mountPath: /tasks/rally
                  readOnly: true
                - name: heat-tasks-test-templates
                  mountPath: /tmp/tasks/test-templates
                  readOnly: true
                - name: rally-reports
                  mountPath: /var/lib/rally/data
{{- dict "enabled" (or .Values.manifests.certificates .Values.tls.identity) "name" .Values.secrets.tls.identity.api.internal "path" "/etc/rally/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 16 }}
          volumes:
            - name: pod-tmp
              emptyDir: {}
            - name: etcrally
              emptyDir: {}
            - name: rally-etc
              secret:
                secretName: rally-etc
                defaultMode: 0444
            - name: rally-tasks
              configMap:
                name: rally-tasks
                defaultMode: 0444
            - name: rally-bin
              configMap:
                name: rally-bin
                defaultMode: 0555
            - name: heat-tasks-test-templates
              configMap:
                name: heat-tasks-test-templates
            - name: rally-reports
              persistentVolumeClaim:
                claimName: {{ .Values.pvc.name }}
{{- dict "enabled" (or .Values.manifests.certificates .Values.tls.identity) "name" .Values.secrets.tls.identity.api.internal | include "helm-toolkit.snippets.tls_volume" | indent 12 }}
{{- end }}
