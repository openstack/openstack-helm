{{/*
Copyright 2017 The Openstack-Helm Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.manifests.statefulset_conductor }}
{{- $envAll := . }}

{{- $mounts_ironic_conductor := .Values.pod.mounts.ironic_conductor.ironic_conductor }}
{{- $mounts_ironic_conductor_init := .Values.pod.mounts.ironic_conductor.init_container }}

{{- $serviceAccountName := "ironic-conductor" }}
{{ tuple $envAll "conductor" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ironic-conductor
  annotations:
    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
  labels:
{{ tuple $envAll "ironic" "conductor" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
spec:
  serviceName: ironic-conductor
  replicas: {{ .Values.pod.replicas.conductor }}
  selector:
    matchLabels:
{{ tuple $envAll "ironic" "conductor" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "ironic" "conductor" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      affinity:
{{ tuple $envAll "ironic" "conductor" | include "helm-toolkit.snippets.kubernetes_pod_anti_affinity" | indent 8 }}
      nodeSelector:
        {{ .Values.labels.conductor.node_selector_key }}: {{ .Values.labels.conductor.node_selector_value }}
      securityContext:
        runAsUser: 0
      hostNetwork: True
      hostIPC: True
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
{{ tuple $envAll "conductor" $mounts_ironic_conductor_init | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        - name: ironic-conductor-pxe-init
{{ tuple $envAll "ironic_pxe_init" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.conductor | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          command:
            - /tmp/ironic-conductor-pxe-init.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: ironic-bin
              mountPath: /tmp/ironic-conductor-pxe-init.sh
              subPath: ironic-conductor-pxe-init.sh
              readOnly: true
            - name: pod-data
              mountPath: /var/lib/openstack-helm
        - name: ironic-conductor-init
{{ tuple $envAll "ironic_conductor" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.conductor | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          env:
            - name: PROVISIONER_INTERFACE
              value: {{ .Values.network.pxe.device }}
          command:
            - /tmp/ironic-conductor-init.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: ironic-bin
              mountPath: /tmp/ironic-conductor-init.sh
              subPath: ironic-conductor-init.sh
              readOnly: true
            - name: pod-shared
              mountPath: /tmp/pod-shared
        - name: ironic-conductor-http-init
{{ tuple $envAll "ironic_conductor" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.conductor | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          env:
            - name: PROVISIONER_INTERFACE
              value: {{ .Values.network.pxe.device }}
          command:
            - /tmp/ironic-conductor-http-init.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: ironic-bin
              mountPath: /tmp/ironic-conductor-http-init.sh
              subPath: ironic-conductor-http-init.sh
              readOnly: true
            - name: ironic-etc
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: pod-shared
              mountPath: /tmp/pod-shared
{{- if and (.Values.bootstrap.object_store.enabled) (.Values.bootstrap.object_store.openstack.enabled) }}
        - name: ironic-retrive-swift-config
{{ tuple $envAll "ironic_retrive_swift_config" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.conductor | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          env:
            - name: OS_SWIFT_API_VERSION
              value: {{ .Values.conf.ironic.glance.swift_api_version | quote }}
{{- with $env := dict "ksUserSecret" .Values.secrets.identity.glance }}
{{- include "helm-toolkit.snippets.keystone_openrc_env_vars" $env | indent 12 }}
{{- end }}
          command:
            - /tmp/retreive-swift-config.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: ironic-bin
              mountPath: /tmp/retreive-swift-config.sh
              subPath: retreive-swift-config.sh
              readOnly: true
            - name: pod-shared
              mountPath: /tmp/pod-shared
{{- end }}
{{- if and (.Values.bootstrap.network.enabled) (.Values.bootstrap.network.openstack.enabled) }}
        - name: ironic-retrive-cleaning-net
{{ tuple $envAll "ironic_retrive_cleaning_network" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.conductor | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          env:
{{- with $env := dict "ksUserSecret" .Values.secrets.identity.ironic }}
{{- include "helm-toolkit.snippets.keystone_openrc_env_vars" $env | indent 12 }}
{{- end }}
{{ include "helm-toolkit.utils.to_k8s_env_vars" $envAll.Values.network.pxe | indent 12 }}
          command:
            - /tmp/retreive-cleaning-network.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: ironic-bin
              mountPath: /tmp/retreive-cleaning-network.sh
              subPath: retreive-cleaning-network.sh
              readOnly: true
            - name: pod-shared
              mountPath: /tmp/pod-shared
{{- end }}
      containers:
        - name: ironic-conductor
{{ tuple $envAll "ironic_conductor" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.conductor | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          securityContext:
            privileged: true
          command:
            - /tmp/ironic-conductor.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: ironic-bin
              mountPath: /tmp/ironic-conductor.sh
              subPath: ironic-conductor.sh
              readOnly: true
            - name: pod-shared
              mountPath: /tmp/pod-shared
            - name: pod-var-cache-ironic
              mountPath: /var/cache/ironic
            - name: ironic-etc
              mountPath: /etc/ironic/ironic.conf
              subPath: ironic.conf
              readOnly: true
            {{- if .Values.conf.ironic.DEFAULT.log_config_append }}
            - name: ironic-etc
              mountPath: {{ .Values.conf.ironic.DEFAULT.log_config_append }}
              subPath: {{ base .Values.conf.ironic.DEFAULT.log_config_append }}
              readOnly: true
            {{- end }}
            - name: ironic-etc
              mountPath: /etc/ironic/policy.json
              subPath: policy.json
              readOnly: true
            - name: host-var-lib-ironic
              mountPath: /var/lib/ironic
            - name: host-run
              mountPath: /var/run
            - name: host-dev
              mountPath: /dev
            - name: host-sys
              mountPath: /sys
            - name: pod-data
              mountPath: /var/lib/openstack-helm
{{ if $mounts_ironic_conductor.volumeMounts }}{{ toYaml $mounts_ironic_conductor.volumeMounts | indent 12 }}{{ end }}
        - name: ironic-conductor-pxe
{{ tuple $envAll "ironic_pxe" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.conductor | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          securityContext:
            privileged: true
          env:
            - name: PROVISIONER_INTERFACE
              value: {{ .Values.network.pxe.device }}
          command:
            - /tmp/ironic-conductor-pxe.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: ironic-bin
              mountPath: /tmp/ironic-conductor-pxe.sh
              subPath: ironic-conductor-pxe.sh
              readOnly: true
            - name: ironic-etc
              mountPath: /tftp-map-file
              subPath: tftp-map-file
              readOnly: true
            - name: pod-data
              mountPath: /var/lib/openstack-helm
        - name: ironic-conductor-http
{{ tuple $envAll "ironic_pxe_http" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.conductor | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          command:
            - /tmp/ironic-conductor-http.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: ironic-bin
              mountPath: /tmp/ironic-conductor-http.sh
              subPath: ironic-conductor-http.sh
              readOnly: true
            - name: pod-shared
              mountPath: /tmp/pod-shared
              readOnly: true
            - name: pod-data
              mountPath: /var/lib/openstack-helm
{{ if $mounts_ironic_conductor.volumeMounts }}{{ toYaml $mounts_ironic_conductor.volumeMounts | indent 12 }}{{ end }}
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: pod-shared
          emptyDir: {}
        - name: pod-var-cache-ironic
          emptyDir: {}
        - name: ironic-bin
          configMap:
            name: ironic-bin
            defaultMode: 0555
        - name: ironic-etc
          secret:
            secretName: ironic-etc
            defaultMode: 0444
        - name: host-var-lib-ironic
          hostPath:
            path: /var/lib/ironic
        - name: host-run
          hostPath:
            path: /var/run
        - name: host-dev
          hostPath:
            path: /dev
        - name: host-sys
          hostPath:
            path: /sys
        - name: pod-data
          emptyDir: {}
{{ if $mounts_ironic_conductor.volumes }}{{ toYaml $mounts_ironic_conductor.volumes | indent 8 }}{{ end }}
{{- end }}
